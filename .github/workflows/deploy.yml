name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
      - master
      - cloud_deploy
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Authenticate Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCE_PROJECT_ID }}
    
    - name: Configure Docker
      run: gcloud --quiet auth configure-docker
    
    - name: Build Docker Image
      run: DOCKER_BUILDKIT=1 docker build --target prod -t "gcr.io/${{ secrets.GCE_PROJECT_ID }}/${{ secrets.GCE_INSTANCE }}:$GITHUB_SHA" .

    - name: Push Docker Image to Artifact Registry
      run: docker push "gcr.io/${{ secrets.GCE_PROJECT_ID }}/${{ secrets.GCE_INSTANCE }}:$GITHUB_SHA"
    
    - name: Prune Docker Images from VM Instance
      run: |-
        gcloud compute instances add-metadata "${{ secrets.GCE_INSTANCE }}" \
          --zone "${{ secrets.GCE_INSTANCE_ZONE }}" \
          --metadata=startup-script="
            #!/bin/bash
            docker image prune -af"
    
    - name: Update Instance Container
      run: |-
        gcloud compute instances update-container "${{ secrets.GCE_INSTANCE }}" \
          --zone "${{ secrets.GCE_INSTANCE_ZONE }}" \
          --container-image "gcr.io/${{ secrets.GCE_PROJECT_ID }}/${{ secrets.GCE_INSTANCE }}:$GITHUB_SHA" \
          --container-env BOT_TOKEN=${{ secrets.BOT_TOKEN }} \
          --container-env SUPABASE_PROJECT_URL=${{ secrets.SUPABASE_PROJECT_URL }} \
          --container-env SUPABASE_PUBLISHABLE_KEY=${{ secrets.SUPABASE_PUBLISHABLE_KEY }}
    
    - name: Purge Artifact Registry Images
      run: |-
        gcloud artifact docker images delete "gcr.io/${{ secrets.GCE_PROJECT_ID }}/${{ secrets.GCE_INSTANCE }}:$GITHUB_SHA"
